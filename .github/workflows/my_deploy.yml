name: My deploy action

run-name: My deploy action by @${{ github.actor }}

on:
  push:
    branches: ["master"]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: ${{secrets.TESTING_DB_NAME}}
          POSTGRES_USER: ${{secrets.TESTING_DB_USER}}
          POSTGRES_PASSWORD: ${{secrets.TESTING_DB_PASSWORD}}
        ports:
          - 5433:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f app/requirements.txt ]; then pip install -r app/requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pytest

  build_and_push:
    needs: [test]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Set up Docker Build
      uses: docker/setup-buildx-action@v2
    - name: Build and push
      uses: docker/build-push-action@v4
      with:
        context: app
        file: app/../docker/Dockerfile
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/flask_blog:latest

  deploy:
    needs: [build_and_push]
    runs-on: ubuntu-latest
    steps:
      - name: Run deploy
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ vars.SERVER_HOST }}
          username: ${{ vars.SERVER_USERNAME }}
          key: ${{ vars.SERVER_KEY }}
          port: ${{ vars.SERVER_PORT }}
          script: |
            touch flask_blog/app/.env
            echo "${{ vars.ENV_FILE }}" > flask_blog/app/.env
            touch flask_blog/docker-compose.production.yml
            echo "${{ vars.DOCKER_COMPOSE_FILE }}" > flask_blog/docker-compose.production.yml
            docker-compose -f flask_blog/docker-compose.production.yml down
            docker-compose -f flask_blog/docker-compose.production.yml pull
            docker-compose -f flask_blog/docker-compose.production.yml up -d

